"use strict";(self.webpackChunkmy_knowledge_repo=self.webpackChunkmy_knowledge_repo||[]).push([[2114],{3068:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=r(5893),a=r(1151);const s={title:"\u7b2c\u4e8c\u7ae0",tags:["\u7f16\u8bd1\u5668","Programming Language Pragmatics"]},i=void 0,o={id:"technical/programming-language-pragmatics/03",title:"\u7b2c\u4e8c\u7ae0",description:"Programming Language Syntax",source:"@site/docs/technical/programming-language-pragmatics/03.md",sourceDirName:"technical/programming-language-pragmatics",slug:"/technical/programming-language-pragmatics/03",permalink:"/docs/technical/programming-language-pragmatics/03",draft:!1,unlisted:!1,tags:[{label:"\u7f16\u8bd1\u5668",permalink:"/docs/tags/\u7f16\u8bd1\u5668"},{label:"Programming Language Pragmatics",permalink:"/docs/tags/programming-language-pragmatics"}],version:"current",frontMatter:{title:"\u7b2c\u4e8c\u7ae0",tags:["\u7f16\u8bd1\u5668","Programming Language Pragmatics"]}},l={},c=[{value:"Programming Language Syntax",id:"programming-language-syntax",level:2},{value:"Specifying Syntax: Regular Expressions and Context-Free Grammars",id:"specifying-syntax-regular-expressions-and-context-free-grammars",level:3},{value:"Scanning",id:"scanning",level:3},{value:"Generating a Finite Automaton",id:"generating-a-finite-automaton",level:4},{value:"Scanner Code",id:"scanner-code",level:4},{value:"Parsing",id:"parsing",level:3},{value:"Syntax Errors",id:"syntax-errors",level:4},{value:"Theoretical Foundations",id:"theoretical-foundations",level:3},{value:"Summary and Concluding Remarks",id:"summary-and-concluding-remarks",level:3}];function h(e){const n={blockquote:"blockquote",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"programming-language-syntax",children:"Programming Language Syntax"}),"\n",(0,t.jsx)(n.p,{children:"Unlike natural languages such as English or Chinese,computer languages must be precise. Both their form (syntax) and meaning (semantics) must be specified without ambiguity, so that both programmers and computers can tell what a program is supposed to do. To provide the needed degree of precision, language designers and implementors use formal syntactic and semantic notation. To facilitate the discussion of language features in later chapters, we will cover this notation first: syntax in the current chapter and semantics in Chapter 4."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u4e0e\u82f1\u8bed\u6216\u4e2d\u6587\u7b49\u81ea\u7136\u8bed\u8a00\u4e0d\u540c\uff0c\u8ba1\u7b97\u673a\u8bed\u8a00\u5fc5\u987b\u8981\u7cbe\u786e\u3002\u5b83\u4eec\u7684\u5f62\u5f0f\uff08\u8bed\u6cd5\uff09\u548c\u542b\u4e49\uff08\u8bed\u4e49\uff09\u5fc5\u987b\u8981\u660e\u786e\u5b9a\u4e49\uff0c\u4ee5\u4fbf\u7a0b\u5e8f\u5458\u548c\u8ba1\u7b97\u673a\u90fd\u80fd\u7406\u89e3\u7a0b\u5e8f\u7684\u9884\u671f\u884c\u4e3a\u3002\u4e3a\u4e86\u63d0\u4f9b\u6240\u9700\u7684\u7cbe\u786e\u5ea6\uff0c\u8bed\u8a00\u8bbe\u8ba1\u8005\u548c\u5b9e\u73b0\u8005\u4f7f\u7528\u6b63\u5f0f\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u7b26\u53f7\u3002\u4e3a\u4e86\u4fbf\u4e8e\u540e\u7eed\u7ae0\u8282\u4e2d\u8ba8\u8bba\u8bed\u8a00\u7279\u6027\uff0c\u6211\u4eec\u5c06\u9996\u5148\u4ecb\u7ecd\u8fd9\u4e9b\u7b26\u53f7\uff1a\u672c\u7ae0\u4ecb\u7ecd\u8bed\u6cd5\uff0c\u7b2c\u56db\u7ae0\u4ecb\u7ecd\u8bed\u4e49\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"specifying-syntax-regular-expressions-and-context-free-grammars",children:"Specifying Syntax: Regular Expressions and Context-Free Grammars"}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u4e4b\u6240\u4ee5\u4f7f\u7528BNF\uff08\u5df4\u79d1\u65af-\u8bfa\u5c14\u8303\u5f0f\uff09\u800c\u4e0d\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u590d\u6742\u6027\u901a\u5e38\u8d85\u51fa\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8868\u8fbe\u80fd\u529b\u3002\u4ee5\u4e0b\u662f\u51e0\u4e2a\u5173\u952e\u70b9\u6765\u89e3\u91ca\u8fd9\u4e00\u9009\u62e9\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u8868\u8fbe\u80fd\u529b"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\u6b63\u5219\u8868\u8fbe\u5f0f"}),"\uff1a\u5b83\u4eec\u662f\u7528\u6765\u63cf\u8ff0\u6b63\u89c4\u8bed\u8a00\u7684\uff0c\u53ea\u80fd\u8868\u8fbe\u6709\u9650\u7684\u8bed\u6cd5\u6a21\u5f0f\uff0c\u901a\u5e38\u7528\u4e8e\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u5339\u914d\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u80fd\u5f88\u597d\u5730\u5904\u7406\u9012\u5f52\u6a21\u5f0f\uff0c\u8fd9\u662f\u7f16\u7a0b\u8bed\u8a00\u5e38\u89c1\u7684\u7ed3\u6784\uff0c\u5982\u5d4c\u5957\u7684\u62ec\u53f7\u3001if-else\u7ed3\u6784\u548c\u51fd\u6570\u8c03\u7528\u7b49\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BNF\u8303\u5f0f"}),"\uff1a\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u793a\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff08CFG\uff09\u7684\u7b26\u53f7\uff0c\u80fd\u591f\u63cf\u8ff0\u66f4\u590d\u6742\u7684\u8bed\u8a00\u7ed3\u6784\uff0c\u5305\u62ec\u9012\u5f52\uff0c\u8fd9\u4f7f\u5f97BNF\u975e\u5e38\u9002\u5408\u8868\u793a\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u9012\u5f52\u7ed3\u6784"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7ecf\u5e38\u4f1a\u6709\u9012\u5f52\u7ed3\u6784\uff0c\u6bd4\u5982\u5728\u8bed\u8a00\u4e2d\u53ef\u4ee5\u6709\u65e0\u9650\u5d4c\u5957\u7684\u51fd\u6570\u8c03\u7528\u6216\u8005\u5faa\u73af\u7ed3\u6784\u3002BNF\u8303\u5f0f\u81ea\u7136\u800c\u7136\u5730\u652f\u6301\u9012\u5f52\u5b9a\u4e49\uff0c\u800c\u6b63\u5219\u8868\u8fbe\u5f0f\u5219\u4e0d\u652f\u6301\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"BNF\u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u7684\u4e00\u79cd\u8868\u793a\u65b9\u6cd5\uff0c\u5b83\u80fd\u591f\u63cf\u8ff0\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u3002\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u6bd4\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8868\u8fbe\u80fd\u529b\u66f4\u5f3a\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u4f7f\u7528\u975e\u7ec8\u7ed3\u7b26\u548c\u89c4\u5219\u6765\u5b9a\u4e49\u8bed\u8a00\u7684\u8bed\u6cd5\u7ed3\u6784\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u89e3\u6790\u7b97\u6cd5"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"BNF\u8303\u5f0f\u5b9a\u4e49\u7684\u8bed\u6cd5\u53ef\u4ee5\u76f4\u63a5\u88ab\u8f6c\u6362\u6210\u89e3\u6790\u5668\uff0c\u5982LL\u6216LR\u89e3\u6790\u5668\uff0c\u8fd9\u4e9b\u89e3\u6790\u5668\u53ef\u4ee5\u6784\u5efa\u51fa\u6e90\u4ee3\u7801\u7684\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u9002\u5408\u8fd9\u79cd\u7528\u9014\uff0c\u56e0\u4e3a\u5b83\u4eec\u7f3a\u4e4f\u6784\u5efa\u590d\u6742\u7ed3\u6784\u7684\u80fd\u529b\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"BNF\u8303\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u6e05\u6670\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u8bed\u6cd5\u89c4\u5219\uff0c\u8fd9\u8ba9\u8bed\u8a00\u8bbe\u8ba1\u8005\u66f4\u5bb9\u6613\u5b9a\u4e49\u3001\u9605\u8bfb\u548c\u7ef4\u62a4\u8bed\u8a00\u7684\u8bed\u6cd5\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u590d\u6742\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u96be\u4ee5\u7406\u89e3\u548c\u7ef4\u62a4\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u603b\u4e4b\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5728\u5904\u7406\u7b80\u5355\u7684\u6587\u672c\u6a21\u5f0f\u65f6\u975e\u5e38\u6709\u7528\uff0c\u4f46\u5bf9\u4e8e\u5b9a\u4e49\u7f16\u7a0b\u8bed\u8a00\u8fd9\u6837\u7ed3\u6784\u590d\u6742\u3001\u5c42\u6b21\u591a\u3001\u9700\u8981\u9012\u5f52\u5b9a\u4e49\u7684\u8bed\u6cd5\u6765\u8bf4\uff0cBNF\u8303\u5f0f\u63d0\u4f9b\u4e86\u66f4\u5f3a\u5927\u3001\u66f4\u7075\u6d3b\u7684\u8bed\u6cd5\u63cf\u8ff0\u80fd\u529b\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"scanning",children:"Scanning"}),"\n",(0,t.jsx)(n.p,{children:"By grouping input characters into tokens, the scanner dramatically reduces the number of individual items that must be inspected by the more computationally intensive parser. In addition, the scanner typically removes comments (so the parser doesn\u2019t have to worry about them appearing throughout the context-free grammar); saves the text of \u201cinteresting\u201d tokens like identifiers, strings, and numeric literals; and tags tokens with line and column numbers, to make it easier to generate high-quality error messages in subsequent phases."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u901a\u8fc7\u5c06\u8f93\u5165\u5b57\u7b26\u5206\u7ec4\u6210\u6807\u8bb0\uff0c\u626b\u63cf\u5668\u5927\u5927\u51cf\u5c11\u4e86\u9700\u8981\u7531\u8ba1\u7b97\u5bc6\u96c6\u578b\u7684\u89e3\u6790\u5668\u68c0\u67e5\u7684\u5355\u4e2a\u9879\u7684\u6570\u91cf\u3002\u6b64\u5916\uff0c\u626b\u63cf\u5668\u901a\u5e38\u4f1a\u79fb\u9664\u6ce8\u91ca\uff08\u8fd9\u6837\u89e3\u6790\u5668\u5c31\u4e0d\u5fc5\u62c5\u5fc3\u5b83\u4eec\u51fa\u73b0\u5728\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u6cd5\u4e2d\uff09\uff1b\u4fdd\u5b58\u201c\u6709\u8da3\u201d\u7684\u6807\u8bb0\u7684\u6587\u672c\uff0c\u6bd4\u5982\u6807\u8bc6\u7b26\u3001\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u5b57\u9762\u91cf\uff1b\u5e76\u7ed9\u6807\u8bb0\u6dfb\u52a0\u884c\u53f7\u548c\u5217\u53f7\uff0c\u4ee5\u4fbf\u5728\u540e\u7eed\u9636\u6bb5\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u9519\u8bef\u6d88\u606f\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generating-a-finite-automaton",children:"Generating a Finite Automaton"}),"\n",(0,t.jsx)(n.p,{children:"While a finite automaton can in principle be written by hand, it is more common to build one automatically from a set of regular expressions, using a scanner generator tool."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u6709\u9650\u81ea\u52a8\u673a\u539f\u5219\u4e0a\u53ef\u4ee5\u624b\u52a8\u7f16\u5199\uff0c\u4f46\u66f4\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u5229\u7528\u626b\u63cf\u5668\u751f\u6210\u5de5\u5177\u4ece\u4e00\u7ec4\u6b63\u5219\u8868\u8fbe\u5f0f\u81ea\u52a8\u6784\u5efa\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"As it turns out, however, there is no obvious one-step algorithm to convert a set of regular expressions into an equivalent deterministic finite automaton (DFA). The typical scanner generator implements the conversion as a series of three separate steps."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u7136\u800c\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5e76\u6ca1\u6709\u660e\u663e\u7684\u4e00\u6b65\u7b97\u6cd5\u53ef\u4ee5\u5c06\u4e00\u7ec4\u6b63\u5219\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u7b49\u4ef7\u7684\u786e\u5b9a\u6709\u9650\u81ea\u52a8\u673a\uff08DFA\uff09\u3002\u5178\u578b\u7684\u626b\u63cf\u5668\u751f\u6210\u5668\u5c06\u8f6c\u6362\u5b9e\u73b0\u4e3a\u4e09\u4e2a\u5355\u72ec\u6b65\u9aa4\u7684\u7cfb\u5217\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The first step converts the regular expressions into a nondeterministic finite automaton (NFA)."}),"\n",(0,t.jsx)(n.li,{children:"the second step of a scanner generatortranslates the NFA into an equivalentDFA"}),"\n",(0,t.jsx)(n.li,{children:"The third step is a space optimization that generates a final DFA with the minimum possible number of states."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"scanner-code",children:"Scanner Code"}),"\n",(0,t.jsx)(n.p,{children:"We can implement a scanner that explicitly captures the \u201ccircles-and-arrows\u201d structure of a DFA in either of two main ways. One embeds the automaton in the control flow of the program using gotos or nested case (switch) statements; the other, described in the following subsection, uses a table and a driver."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u4e3b\u8981\u65b9\u5f0f\u4e4b\u4e00\uff0c\u660e\u786e\u5730\u6355\u83b7DFA\u7684\u201c\u5706\u5708\u548c\u7bad\u5934\u201d\u7ed3\u6784\u6765\u5b9e\u73b0\u626b\u63cf\u5668\u3002\u4e00\u79cd\u65b9\u5f0f\u662f\u5229\u7528goto\u6216\u5d4c\u5957\u7684case\uff08switch\uff09\u8bed\u53e5\u5c06\u81ea\u52a8\u673a\u5d4c\u5165\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u4e2d\uff1b\u53e6\u4e00\u79cd\u65b9\u5f0f\u5728\u4e0b\u4e00\u5c0f\u8282\u4e2d\u63cf\u8ff0\uff0c\u5b83\u4f7f\u7528\u8868\u548c\u9a71\u52a8\u7a0b\u5e8f\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"parsing",children:"Parsing"}),"\n",(0,t.jsx)(n.p,{children:"The parser is the heart of a typical compiler. It calls the scanner to obtain the tokens of the input program, assembles the tokens together into a syntax tree, and passes the tree (perhaps one subroutine at a time) to the later phases of the compiler, which perform semantic analysis and code generation and improvement. In effect, the parser is \u201cin charge\u201d of the entire compilation process; this style of compilation is sometimes referred to as syntax-directed translation."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u89e3\u6790\u5668\u662f\u5178\u578b\u7f16\u8bd1\u5668\u7684\u6838\u5fc3\u3002\u5b83\u8c03\u7528\u626b\u63cf\u5668\u4ee5\u83b7\u53d6\u8f93\u5165\u7a0b\u5e8f\u7684\u6807\u8bb0\uff0c\u5c06\u8fd9\u4e9b\u6807\u8bb0\u7ec4\u88c5\u6210\u8bed\u6cd5\u6811\uff0c\u7136\u540e\u5c06\u8bed\u6cd5\u6811\uff08\u53ef\u80fd\u4e00\u6b21\u4e00\u4e2a\u5b50\u7a0b\u5e8f\uff09\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\u7684\u540e\u7eed\u9636\u6bb5\uff0c\u8fd9\u4e9b\u9636\u6bb5\u6267\u884c\u8bed\u4e49\u5206\u6790\u3001\u4ee3\u7801\u751f\u6210\u548c\u4f18\u5316\u3002\u5b9e\u9645\u4e0a\uff0c\u89e3\u6790\u5668\u201c\u4e3b\u5bfc\u201d\u6574\u4e2a\u7f16\u8bd1\u8fc7\u7a0b\uff1b\u8fd9\u79cd\u7f16\u8bd1\u98ce\u683c\u6709\u65f6\u88ab\u79f0\u4e3a\u8bed\u6cd5\u5b9a\u5411\u7ffb\u8bd1\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u89e3\u6790\u7b97\u6cd5\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"LL\uff08\u81ea\u9876\u5411\u4e0b\uff09"}),"\n",(0,t.jsx)(n.li,{children:"LR\uff08\u81ea\u5e95\u5411\u4e0a\uff09"}),"\n",(0,t.jsx)(n.li,{children:"\u9012\u5f52\u4e0b\u964d"}),"\n",(0,t.jsx)(n.li,{children:"\u8868\u9a71\u52a8\u81ea\u9876\u5411\u4e0b\u89e3\u6790"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"syntax-errors",children:"Syntax Errors"}),"\n",(0,t.jsx)(n.p,{children:"In general, the term syntax error recovery is applied to any technique that allows the compiler, in the face of a syntax error, to continue looking for other errors later in the program. High-quality syntax error recovery is essential in any production-quality compiler. The better the recovery technique, the more likely the compiler will be to recognize additional errors (especially nearby errors) correctly, and the less likely it will be to become confused and announce spurious cascading errors later in the program."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u4e00\u822c\u6765\u8bf4\uff0c\u201c\u8bed\u6cd5\u9519\u8bef\u6062\u590d\u201d\u8fd9\u4e2a\u672f\u8bed\u9002\u7528\u4e8e\u4efb\u4f55\u5141\u8bb8\u7f16\u8bd1\u5668\u5728\u9762\u5bf9\u8bed\u6cd5\u9519\u8bef\u65f6\u7ee7\u7eed\u5bfb\u627e\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u9519\u8bef\u7684\u6280\u672f\u3002\u5728\u4efb\u4f55\u751f\u4ea7\u7ea7\u7f16\u8bd1\u5668\u4e2d\uff0c\u9ad8\u8d28\u91cf\u7684\u8bed\u6cd5\u9519\u8bef\u6062\u590d\u90fd\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u6062\u590d\u6280\u672f\u8d8a\u597d\uff0c\u7f16\u8bd1\u5668\u8bc6\u522b\u989d\u5916\u9519\u8bef\uff08\u5c24\u5176\u662f\u9644\u8fd1\u7684\u9519\u8bef\uff09\u7684\u51c6\u786e\u6027\u5c31\u8d8a\u9ad8\uff0c\u5b83\u6df7\u6dc6\u5e76\u5728\u7a0b\u5e8f\u540e\u671f\u5ba3\u5e03\u865a\u5047\u7684\u7ea7\u8054\u9519\u8bef\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5c0f\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"theoretical-foundations",children:"Theoretical Foundations"}),"\n",(0,t.jsx)(n.p,{children:"Our understanding of the relative roles and computational power of scanners, parsers, regular expressions, and context-free grammars is based on the formalisms of automata theory. In automata theory, a formal language is a set of strings of symbols drawn from a finite alphabet. A formal language can be specified either by a set of rules (such as regular expressions or a context-free grammar) that generates the language, or by a formal machine that accepts (recognizes) the language. A formal machine takes strings of symbols as input and outputs either \u201cyes\u201d or \u201cno.\u201d A machine is said to accept a language if it says \u201cyes\u201d to all and only those strings that are in the language. Alternatively, a language can be defined as the set of strings for which a particular machine says \u201cyes.\u201d"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u6211\u4eec\u5bf9\u626b\u63cf\u4eea\u3001\u89e3\u6790\u5668\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u7684\u76f8\u5bf9\u4f5c\u7528\u548c\u8ba1\u7b97\u80fd\u529b\u7684\u7406\u89e3\u662f\u57fa\u4e8e\u81ea\u52a8\u673a\u7406\u8bba\u7684\u5f62\u5f0f\u4e3b\u4e49\u3002\u5728\u81ea\u52a8\u673a\u7406\u8bba\u4e2d\uff0c\u5f62\u5f0f\u8bed\u8a00\u662f\u4ece\u6709\u9650\u5b57\u6bcd\u8868\u4e2d\u63d0\u53d6\u7684\u4e00\u7ec4\u7b26\u53f7\u4e32\u3002\u5f62\u5f0f\u8bed\u8a00\u53ef\u4ee5\u901a\u8fc7\u4e00\u7ec4\u89c4\u5219\uff08\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\u6216\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff09\u6765\u6307\u5b9a\uff0c\u8fd9\u4e9b\u89c4\u5219\u751f\u6210\u8bed\u8a00\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u63a5\u53d7\uff08\u8bc6\u522b\uff09\u8bed\u8a00\u7684\u5f62\u5f0f\u673a\u6765\u6307\u5b9a\u3002\u5f62\u5f0f\u673a\u5c06\u7b26\u53f7\u4e32\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u201c\u662f\u201d\u6216\u201c\u5426\u201d\u3002\u5982\u679c\u673a\u5668\u5bf9\u4e8e\u6240\u6709\u5c5e\u4e8e\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u90fd\u56de\u7b54\u201c\u662f\u201d\uff0c\u5219\u79f0\u8be5\u673a\u5668\u63a5\u53d7\u8be5\u8bed\u8a00\u3002\u6216\u8005\uff0c\u8bed\u8a00\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u4e00\u7ec4\u5b57\u7b26\u4e32\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u5b57\u7b26\u4e32\uff0c\u7279\u5b9a\u7684\u673a\u5668\u56de\u7b54\u201c\u662f\u201d\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"summary-and-concluding-remarks",children:"Summary and Concluding Remarks"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u6b63\u5219\u8868\u8fbe\u5f0f"}),"\n",(0,t.jsx)(n.li,{children:"\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5"}),"\n",(0,t.jsx)(n.li,{children:"\u5b9e\u9645\u7f16\u8bd1\u5668\u4e2d\u7684\u626b\u63cf\u548c\u89e3\u6790\u7b97\u6cd5"}),"\n",(0,t.jsx)(n.li,{children:"\u8bed\u6cd5\u9519\u8bef\u6062\u590d\uff08painc\uff09"}),"\n",(0,t.jsx)(n.li,{children:"\u81ea\u9876\u5411\u4e0b\u89e3\u6790"}),"\n",(0,t.jsx)(n.li,{children:"\u81ea\u5e95\u5411\u4e0a\u89e3\u6790"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>i});var t=r(7294);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);